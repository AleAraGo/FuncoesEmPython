# -*- coding: utf-8 -*-
"""ExerciciosFuncoesEListas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wSO_fjWsPymP4W6ymjOKIPpTAVmNtb-C

### Aula de exercícios - Funções
---

1) Crie a função
> def taboada(n):
>>Apresenta a taboada do inteiro n,

onde 1 <= n <= 9. Que reproduz a taboada do número n na forma (exemplo para n = 7):
"""

def taboada(n):
  print(f'Taboada do {n}')
  print('-------------')
  [print(f'{x}  x {n}= {x*n}') for x in range(1,11)]

taboada(7)

"""2) Implemente uma função que receba um valor n inteiro e imprima até a n-ésima linha da seguinte forma:
* 1
* 22
* 333
* : : :
* nnnnnn


"""

def printfunny(n):
  for i in range(n+1):
    for num in range(i):
      print(f"{i}", end=" ")
    print()

printfunny(5)

"""3) Implemente uma função que receba um valor n inteiro e imprima até a n-ésima linha da seguinte forma:
* 1
* 12
* 123
* : : :
* 1234...n
"""

def printfunny_2(n):
  for i in range(n+1):
    for num in range(i):
      print(f"{num+1}", end=" ")
    print()

printfunny_2(5)

"""4) Implemente uma função que receba um valor em segundos e imprima o correspondente em horas, minutos e segundos. Por exemplo, se a função receber como argumento 4814, imprimirá 1 hora(s) 20 minuto(s) e 14 segundo(s)."""

def timeconverter(t):
  h=int(t/3600)
  m = int((t%3600)/60)
  s = int((t%3600)%60)
  return h,m,s
  print(s)

t = int(input('Informe o tempo em segundos a ser convertido.: '))
h,m,s = timeconverter(t)
print(f'{h} hora, {m} minuto(s) e {s} segundos')

"""5) Implemente uma função que retorna True se o argumento de entrada for um número natural primo e False caso contrário."""

def test_primo(p):
  if p ==1:
    return False
  test = 0
  for i in range(1,p):
    if p%i==0:
      test+=1
      if test >1:
        return False
  return True

test_primo(11)

"""6) Implemente uma função que retorne a quantidade de dígitos de um determinado número natural passado como argumento. Por exemplo, ao chamar a função com o número 2131, ela
deverá retornar 4.
"""

def cont_dig2(d):
  count, div = 0,1
  while d/div >1 :
    count +=1
    div*=10
  return count

def cont_dig3(d):
  count, div = 0,1
  while d>0:
    count +=1
    d //= 10
  return count

cont_dig3(100)

"""7) Implemente a função todos_iguais (sequencia) que retorna True se todos os elementos de sequencia forem iguais, e retorna False caso contrário."""

def todos_iguais (d):
  pri = d[0]
  for elem in d:
    if elem != pri:
      return False
  return True

def todos_iguais2(d):
  pri = d[0]
  lista = [(i==pri) for i in d]
  print(lista)

todos_iguais2([2,2,1,1,1])